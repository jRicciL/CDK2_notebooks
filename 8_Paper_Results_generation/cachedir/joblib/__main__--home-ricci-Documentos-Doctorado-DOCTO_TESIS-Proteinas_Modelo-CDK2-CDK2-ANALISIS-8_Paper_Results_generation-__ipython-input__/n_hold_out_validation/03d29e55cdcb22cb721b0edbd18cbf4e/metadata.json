{"duration": 4.101302862167358, "input_args": {"estimators": "{'ml_knn': KNeighborsClassifier(n_jobs=4, n_neighbors=1), 'ml_lr': LogisticRegression(C=0.01, max_iter=400), 'ml_xgb': XGBClassifier(alpha=0.01, base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.5, gamma=0.01, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.05, max_delta_step=0, max_depth=20,\n              min_child_weight=1, missing=nan, monotone_constraints='()',\n              n_estimators=200, n_jobs=0, num_parallel_tree=1, random_state=0,\n              reg_alpha=0.00999999978, reg_lambda=1, scale_pos_weight=1,\n              subsample=0.5, tree_method='exact', validate_parameters=1,\n              verbosity=None), 'ml_dclf': DummyClassifier(random_state=42, strategy='stratified'), 'cs_MEAN': <function get_mean_score at 0x7f78083333b0>, 'cs_MAX': <function get_max_score at 0x7f78083339e0>, 'cs_MIN': <function get_min_score at 0x7f78083337a0>, 'cs_VOTE': <function get_vote_score at 0x7f7808333ef0>}", "X": "array([[ -6.8,  -6.8,  -6.3, ...,  -6.7,  -5.9,  -6.3],\n       [ -8.9,  -8.5,  -8. , ...,  -7.1,  -7.5,  -6.5],\n       [ -7.3,  -7.3,  -7.1, ...,  -7.1,  -7.6,  -7.2],\n       ...,\n       [ -8.9,  -9. ,  -8.4, ...,  -9.3,  -8.5,  -8.5],\n       [ -8. , -10.5,  -7.6, ...,  -9. ,  -8.2,  -7.8],\n       [ -8. ,  -8.3,  -7. , ...,  -7.7,  -7.9,  -7.9]])", "y": "array([1, 1, 1, ..., 0, 0, 0])", "metrics": "{'roc_auc': {'metric_name': 'roc_auc'}, 'nef_02': {'metric_name': 'ef', 'fraction': 0.02, 'method': 'normalized'}, 'nef_12_Ra': {'metric_name': 'ef', 'fraction': 0.12, 'method': 'normalized'}, 'pROC': {'metric_name': 'p_roc'}, 'pr_auc': {'metric_name': 'pr_auc'}}", "n_reps": "1", "test_size": "0.25", "random_state": "None", "**": "{}"}}