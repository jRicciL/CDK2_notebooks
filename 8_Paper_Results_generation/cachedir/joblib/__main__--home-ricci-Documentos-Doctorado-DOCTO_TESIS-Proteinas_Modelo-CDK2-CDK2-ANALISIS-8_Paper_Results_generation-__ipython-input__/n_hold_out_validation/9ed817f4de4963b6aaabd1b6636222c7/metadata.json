{"duration": 45.306267976760864, "input_args": {"estimators": "{'ml_knn': KNeighborsClassifier(n_jobs=4, n_neighbors=1), 'ml_lr': LogisticRegression(C=0.01, max_iter=400), 'ml_xgb': XGBClassifier(alpha=0.01, base_score=0.5, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=0.5, gamma=0.01, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.05, max_delta_step=0, max_depth=20,\n              min_child_weight=1, missing=nan, monotone_constraints='()',\n              n_estimators=200, n_jobs=0, num_parallel_tree=1, random_state=0,\n              reg_alpha=0.00999999978, reg_lambda=1, scale_pos_weight=1,\n              subsample=0.5, tree_method='exact', validate_parameters=1,\n              verbosity=None), 'ml_dclf': DummyClassifier(random_state=42, strategy='stratified'), 'cs_MEAN': <function get_mean_score at 0x7f332d1a4200>, 'cs_MAX': <function get_max_score at 0x7f332d1a4830>, 'cs_MIN': <function get_min_score at 0x7f332d1a45f0>, 'cs_VOTE': <function get_vote_score at 0x7f332d1a4d40>}", "X": "array([[-7.7, -5.8, -7.9, -7.1],\n       [-6.8, -8.3, -9.7, -7.8],\n       [-6.5, -6.7, -7.4, -6.7],\n       ...,\n       [-6.7, -7.9, -8.3, -7.3],\n       [-8.2, -6.4, -9.6, -7.8],\n       [-7. , -7. , -8.7, -8. ]])", "y": "array([1, 1, 1, ..., 0, 0, 0])", "metrics": "{'roc_auc': {'metric_name': 'roc_auc'}, 'nef_02': {'metric_name': 'ef', 'fraction': 0.02, 'method': 'normalized'}, 'nef_12_Ra': {'metric_name': 'ef', 'fraction': 0.12, 'method': 'normalized'}, 'pROC': {'metric_name': 'p_roc'}, 'pr_auc': {'metric_name': 'pr_auc'}}", "n_reps": "30", "test_size": "0.25", "random_state": "42", "**": "{}"}}